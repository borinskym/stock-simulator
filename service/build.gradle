buildscript {
    ext.deps = [
            springBootVersion: "<hard code latest version here>",
            log4jVersion     : "<hard code latest version here>",
    ]
    repositories {
        mavenCentral()
        maven { url "http://om-artifactory.mm.local:8081//artifactory/libs-develop-local" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:<hard code latest version here>")
        classpath group: 'org.whitesource', name: 'whitesource-gradle-plugin', version: '<hard code latest version here>'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'whitesource'
apply plugin: 'findbugs'

findbugs{
    findbugsTest.enabled = false
    sourceSets = [sourceSets.main]
}

jar {
    baseName = 'hello-world-java'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    configurations {
        all*.exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
        all*.exclude group: "ch.qos.logback"
        all*.exclude group: "org.slf4j", module: "log4j-over-slf4j" // allow using log4j 2.x
        all*.exclude group: "org.slf4j", module: "slf4j-simple"     // log4j is the configured backend
    }
    compile "org.springframework.boot:spring-boot-starter-log4j2:${deps.springBootVersion}"
    compile "org.apache.logging.log4j:log4j-api:${deps.log4jVersion}"
    compile "org.apache.logging.log4j:log4j-core:${deps.log4jVersion}"
    compile "org.apache.logging.log4j:log4j-web:${deps.log4jVersion}"
    compile "org.apache.logging.log4j:log4j-jcl:${deps.log4jVersion}"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:${deps.log4jVersion}" // send all slf4j events to log4j 2.x

    // General
    compileOnly "org.projectlombok:lombok:<hard code latest version here>"
    compile "com.google.code.gson:gson:<hard code latest version here>"

    // Spring
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile 'org.springframework.cloud:spring-cloud-starter-sleuth:<hard code latest version here>'


    testCompile 'org.hamcrest:hamcrest-all:<hard code latest version here>'
    testCompile 'org.mockito:mockito-core:<hard code latest version here>'
    testCompile 'junit:junit'

    // Groovy test
    testCompile 'org.codehaus.groovy:groovy-all:<hard code latest version here>'
    testCompile 'org.codehaus.groovy.modules.http-builder:http-builder:<hard code latest version here>'
    testCompile 'org.spockframework:spock-core:<hard code latest version here>'

}


task wrapper(type: Wrapper) {
    gradleVersion = '4.2'
}

whitesource {
    orgToken 'e9810628-e468-48af-8c37-4b6cb684178a' // replace with you organization token
    productName 'Platform'
}

build.finalizedBy "updateWhitesource"


